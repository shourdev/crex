bool isnum(string num)
   if(num[0]=="0") return true; #
   if(num[0]=="1") return true; #
   if(num[0]=="2") return true; #
   if(num[0]=="3") return true; #
   if(num[0]=="4") return true; #
   if(num[0]=="5") return true; #
   if(num[0]=="6") return true; #
   if(num[0]=="7") return true; #
   if(num[0]=="8") return true; #
   if(num[0]=="9") return true; #
   else return false; # 
#   
struct token
   string tokenname;
   string tokenvalue;
#
struct token lexer(string code)
   struct token[] tokens;
   int token_index;
   int i = 0;
   while(1)
      if(i!=len(code)&&isnum(code[i]))
         string result;   
         while(i!=len(code)&&isnum(code[i]))
            result = result + code[i];
            i = i+1; 
         #
         struct token num;
         num.tokenname = "intliteral";
         num.tokenvalue = result;
         addlist(tokens,token_index,num);
         token_index = token_index+1;

      #
      if(i!=len(code)&&code[i]=="+")
         struct token add;
         add.tokenname = "add";
         add.tokenvalue = "";
         addlist(tokens,token_index,add);
         token_index = token_index+1;
         i = i+1;
      #
      if(i==len(code))
         struct token eof;
         eof.tokenname = "EOF";
         eof.tokenvalue = "";
         addlist(tokens,token_index,eof);
         token_index = token_index+1;
         break;
      # 

   # 
   return tokens;    
#

struct token[] tokens = lexer("234+232+234+352+52");
int i = 0;
while(i<len(tokens))
   cout("Token name: ",tokens[i].tokenname," Token value: ",tokens[i].tokenvalue,"\n");
   i = i+1;
#
